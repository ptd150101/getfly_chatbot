import streamlit as st
import requests
import os
import json

# API Configuration
API_URL = "http://localhost:2222"

# Page Configuration 
st.set_page_config(
    page_title="Getfly Assistant",
    page_icon="ü§ñ",
    layout="wide"
)

# Initialize session state for chat history if not exists
if "messages" not in st.session_state:
    st.session_state.messages = [
        {"role": "assistant", "content": "Xin ch√†o! T√¥i l√† tr·ª£ l√Ω Getfly. T√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n?"}
    ]

# Display chat title
st.title("üí¨ Getfly Assistant")

# Display chat history with proper styling for each message
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.write(message["content"])
      

# Modified message display code
if prompt := st.chat_input("Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."):
    st.session_state.messages.append({"role": "user", "content": prompt})
    
    with st.chat_message("user"):
        st.write(prompt)

    try:
        response = requests.post(
            f"{API_URL}/chat",
            json={
                "content": prompt,
                "histories": st.session_state.messages,
                "summary": "",
            },
            headers={"Content-Type": "application/json"}
        )

        if response.status_code == 200:
            responses = response.json()
            for resp in responses.get("data", {}).get("content", []):
                if resp.get("type") == "text":
                    with st.chat_message("assistant"):
                        st.write(resp["content"])
                    # L∆∞u text v√†o session state
                    st.session_state.messages.append({
                        "role": "assistant", 
                        "content": resp["content"]
                    })
                
                elif resp.get("type") == "images":
                    with st.chat_message("assistant"):
                        cols = st.columns(5)  # Hi·ªÉn th·ªã 3 ·∫£nh tr√™n m·ªôt h√†ng
                        for idx, img_url in enumerate(resp["content"]):
                            with cols[idx % 5]:  # Lu√¢n phi√™n gi·ªØa c√°c c·ªôt
                                st.image(
                                    img_url,
                                    width=200,  # C·ªë ƒë·ªãnh chi·ªÅu r·ªông 200px
                                    use_column_width="auto",  # Ho·∫∑c d√πng c√°i n√†y ƒë·ªÉ t·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh theo c·ªôt
                                )
                
                elif resp.get("type") == "videos":
                    with st.chat_message("assistant"):
                        cols = st.columns(5)  # Hi·ªÉn th·ªã 2 video tr√™n m·ªôt h√†ng
                        for idx, video_url in enumerate(resp["content"]):
                            with cols[idx % 5]:
                                st.video(
                                    video_url,
                                    format="video/mp4", 
                                    start_time=0
                                )

    except Exception as e:
        st.error(f"Error connecting to API: {str(e)}")
# Add instructions in sidebar
with st.sidebar:
    st.title("H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng")
    st.markdown("""
    1. Nh·∫≠p c√¢u h·ªèi v·ªÅ Getfly v√†o √¥ chat
    2. Nh·∫•n Enter ƒë·ªÉ g·ª≠i c√¢u h·ªèi
    3. ƒê·ª£i ph·∫£n h·ªìi t·ª´ tr·ª£ l√Ω
    
    **L∆∞u √Ω:** Tr·ª£ l√Ω c√≥ th·ªÉ tr·∫£ l·ªùi c√°c c√¢u h·ªèi v·ªÅ:
    - S·ª≠ d·ª•ng Getfly CRM
    - T√≠nh nƒÉng s·∫£n ph·∫©m
    - H∆∞·ªõng d·∫´n c√†i ƒë·∫∑t
    - API t√≠ch h·ª£p
    """)